
Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x000000000010004c                . = ((0x100000 + SIZEOF_HEADERS) + 0xc)

<<<<<<< HEAD
.text           0x00000000001000bc      0x9bc
 *(.text)
 .text          0x00000000001000bc      0x1f9 tmp/amd64-linux.elf-fold.o
                0x0000000000100245                Pmap
                0x000000000010028a                munmap
                0x000000000010028e                ftruncate
                0x0000000000100253                mmap
                0x00000000001002ad                write
                0x0000000000100292                memfd_create
                0x00000000001002b1                read
                0x000000000010026a                Pprotect
                0x00000000001002ad                Pwrite
                0x000000000010027c                Punmap
                0x0000000000100299                exit
                0x000000000010029d                brk
                0x00000000001002a5                open
                0x00000000001002a9                mprotect
                0x00000000001002a1                close
 *fill*         0x00000000001002b5        0x3 00
 .text          0x00000000001002b8      0x7bd tmp/amd64-linux.elf-main.o
                0x000000000010043c                PF_TO_PROT
                0x000000000010093b                upx_main
 *fill*         0x0000000000100a75        0x3 00
 .text          0x0000000000100a78        0x0 tmp/amd64-expand.o
 *(.data)
 .data          0x0000000000100a78        0x0 tmp/amd64-linux.elf-fold.o
 .data          0x0000000000100a78        0x0 tmp/amd64-linux.elf-main.o
 .data          0x0000000000100a78        0x0 tmp/amd64-expand.o
                0x0000000000100a78                . = ALIGN (0x1)
                0x0000000000100a78                __start_EXP_HEAD = .

EXP_HEAD        0x0000000000100a78       0xe0
 EXP_HEAD       0x0000000000100a78       0xe0 tmp/amd64-expand.o
                0x0000000000100a78                f_expand
                0x0000000000100b58                __stop_EXP_HEAD = .
                0x0000000000100b58                . = ALIGN (0x1)
                0x0000000000100b58                __start_NRV2E = .

NRV2E           0x0000000000100b58       0xe5
 NRV2E          0x0000000000100b58       0xe5 tmp/amd64-expand.o
                0x0000000000100c3d                __stop_NRV2E = .
                0x0000000000100c3d                . = ALIGN (0x1)
                0x0000000000100c3d                __start_NRV2D = .

NRV2D           0x0000000000100c3d       0xd7
 NRV2D          0x0000000000100c3d       0xd7 tmp/amd64-expand.o
                0x0000000000100d14                __stop_NRV2D = .
                0x0000000000100d14                . = ALIGN (0x1)
                0x0000000000100d14                __start_NRV2B = .

NRV2B           0x0000000000100d14       0xc1
 NRV2B          0x0000000000100d14       0xc1 tmp/amd64-expand.o
                0x0000000000100dd5                __stop_NRV2B = .
=======
.text           0x0000000000000000      0x92b
 .text          0x0000000000000000      0x125 tmp/amd64-linux.elf-fold.o
 *fill*         0x0000000000000125        0x3 00
 .text          0x0000000000000128      0x803 tmp/amd64-linux.elf-main.o
                0x00000000000002f7                PF_TO_PROT
                0x00000000000002ac                underlay
                0x00000000000007f1                upx_main

EXP_HEAD        0x0000000000000000       0xef
 EXP_HEAD       0x0000000000000000       0xef tmp/amd64-linux.elf-fold.o
                0x0000000000000000                f_expand
                0x00000000000000b3                copy

NRV2E           0x0000000000000000       0xe0
 NRV2E          0x0000000000000000       0xe0 tmp/amd64-linux.elf-fold.o

NRV2D           0x0000000000000000       0xd2
 NRV2D          0x0000000000000000       0xd2 tmp/amd64-linux.elf-fold.o

NRV2B           0x0000000000000000       0xbc
 NRV2B          0x0000000000000000       0xbc tmp/amd64-linux.elf-fold.o
>>>>>>> 873b6dd6 (amd64 main programs now use memfd_create to support SELinux)

.data           0x0000000000000000        0x0
 .data          0x0000000000000000        0x0 tmp/amd64-linux.elf-fold.o
 .data          0x0000000000000000        0x0 tmp/amd64-linux.elf-main.o

<<<<<<< HEAD
.bss            0x0000000000100dd8        0x0
 .bss           0x0000000000100dd8        0x0 tmp/amd64-linux.elf-fold.o
 .bss           0x0000000000100dd8        0x0 tmp/amd64-linux.elf-main.o
 .bss           0x0000000000100dd8        0x0 tmp/amd64-expand.o

.rela.dyn       0x0000000000100dd8        0x0
 .rela.text     0x0000000000000000        0x0 tmp/amd64-linux.elf-fold.o
=======
.bss            0x0000000000000000        0x0
 .bss           0x0000000000000000        0x0 tmp/amd64-linux.elf-fold.o
 .bss           0x0000000000000000        0x0 tmp/amd64-linux.elf-main.o
>>>>>>> 873b6dd6 (amd64 main programs now use memfd_create to support SELinux)
LOAD tmp/amd64-linux.elf-fold.o
LOAD tmp/amd64-linux.elf-main.o
OUTPUT(tmp/amd64-linux.elf-fold.bin elf64-x86-64)

SYSCALLS        0x0000000000000000       0x85
 SYSCALLS       0x0000000000000000       0x85 tmp/amd64-linux.elf-fold.o
                0x0000000000000018                Pmap
                0x0000000000000061                munmap
                0x0000000000000071                ftruncate
                0x0000000000000026                mmap
                0x000000000000007d                write
                0x0000000000000011                memfd_create
                0x0000000000000081                read
                0x0000000000000000                my_bkpt
                0x0000000000000041                Pprotect
                0x000000000000007d                Pwrite
                0x0000000000000053                Punmap
                0x0000000000000065                exit
                0x0000000000000069                brk
                0x0000000000000075                open
                0x0000000000000079                mprotect
                0x000000000000006d                close

LZMA_ELF00      0x0000000000000000       0x64
 LZMA_ELF00     0x0000000000000000       0x64 tmp/amd64-linux.elf-fold.o

LZMA_DEC10      0x0000000000000000      0x9f7
 LZMA_DEC10     0x0000000000000000      0x9f7 tmp/amd64-linux.elf-fold.o

LZMA_DEC20      0x0000000000000000      0x9f7
 LZMA_DEC20     0x0000000000000000      0x9f7 tmp/amd64-linux.elf-fold.o

LZMA_DEC30      0x0000000000000000       0x18
 LZMA_DEC30     0x0000000000000000       0x18 tmp/amd64-linux.elf-fold.o

<<<<<<< HEAD
EXP_TAIL        0x0000000000000000        0xc
 EXP_TAIL       0x0000000000000000        0xc tmp/amd64-expand.o
                0x000000000000000c                __stop_EXP_TAIL = .
=======
EXP_TAIL        0x0000000000000000        0x1
 EXP_TAIL       0x0000000000000000        0x1 tmp/amd64-linux.elf-fold.o
>>>>>>> 873b6dd6 (amd64 main programs now use memfd_create to support SELinux)
