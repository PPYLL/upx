
Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

TARGET(elf64-powerpc)
                0x000000000010004c                . = ((0x100000 + SIZEOF_HEADERS) + 0xc)

<<<<<<< HEAD
.text           0x000000000010004c      0xcac
=======
.text           0x000000000010004c      0xcf4
>>>>>>> 873b6dd6 (amd64 main programs now use memfd_create to support SELinux)
 *(.text)
 .text          0x000000000010004c      0x394 tmp/powerpc64-linux.elf-fold.o
                0x000000000010004c                get_page_mask
                0x000000000010031c                Pmap
                0x000000000010032c                mmap
                0x0000000000100344                Pprotect
                0x0000000000100344                mprotect
                0x000000000010035c                Punmap
                0x000000000010036c                munmap
                0x0000000000100374                memfd_create
                0x000000000010037c                ftruncate
                0x0000000000100384                exit
                0x000000000010038c                brk
                0x0000000000100394                readlink
                0x000000000010039c                Pwrite
                0x00000000001003a4                read
                0x00000000001003ac                open
                0x00000000001003b4                close
                0x00000000001003bc                memcpy
                0x00000000001003d8                my_bkpt
<<<<<<< HEAD
 .text          0x00000000001003e0      0x918 tmp/powerpc64-linux.elf-main.o
 .text          0x0000000000100cf8        0x0 tmp/powerpc64-expand.o
 *(.data)
 .data          0x0000000000100cf8        0x0 tmp/powerpc64-linux.elf-fold.o
 .data          0x0000000000100cf8        0x0 tmp/powerpc64-linux.elf-main.o
 .data          0x0000000000100cf8        0x0 tmp/powerpc64-expand.o
=======
 .text          0x00000000001003e0      0x960 tmp/powerpc64-linux.elf-main.o
 .text          0x0000000000100d40        0x0 tmp/powerpc64-expand.o
 *(.data)
 .data          0x0000000000100d40        0x0 tmp/powerpc64-linux.elf-fold.o
 .data          0x0000000000100d40        0x0 tmp/powerpc64-linux.elf-main.o
 .data          0x0000000000100d40        0x0 tmp/powerpc64-expand.o
>>>>>>> 873b6dd6 (amd64 main programs now use memfd_create to support SELinux)

.data
LOAD tmp/powerpc64-linux.elf-fold.o
LOAD tmp/powerpc64-linux.elf-main.o
LOAD tmp/powerpc64-expand.o
OUTPUT(tmp/powerpc64-linux.elf-fold.bin elf64-powerpc)

.toc            0x0000000000000000        0x0
 .toc           0x0000000000000000        0x0 tmp/powerpc64-linux.elf-main.o

.opd            0x0000000000000000       0x80
 .opd           0x0000000000000000       0x80 tmp/powerpc64-linux.elf-main.o
<<<<<<< HEAD
=======
                0x0000000000000040                underlay
>>>>>>> 873b6dd6 (amd64 main programs now use memfd_create to support SELinux)
                0x0000000000000050                PF_TO_PROT
                0x0000000000000070                upx_main

.bss            0x0000000000000000        0x0
 .bss           0x0000000000000000        0x0 tmp/powerpc64-linux.elf-fold.o
 .bss           0x0000000000000000        0x0 tmp/powerpc64-linux.elf-main.o
 .bss           0x0000000000000000        0x0 tmp/powerpc64-expand.o

EXP_HEAD        0x0000000000000000       0xdc
 EXP_HEAD       0x0000000000000000       0xdc tmp/powerpc64-expand.o
                0x0000000000000000                f_expand

EXP_TAIL        0x0000000000000000       0x1c
 EXP_TAIL       0x0000000000000000       0x1c tmp/powerpc64-expand.o
                0x0000000000000000                eof_nrv

NRV2E           0x0000000000000000      0x154
 NRV2E          0x0000000000000000      0x154 tmp/powerpc64-expand.o

NRV2D           0x0000000000000000      0x144
 NRV2D          0x0000000000000000      0x144 tmp/powerpc64-expand.o

NRV2B           0x0000000000000000       0xf8
 NRV2B          0x0000000000000000       0xf8 tmp/powerpc64-expand.o

LZMA_ELF00      0x0000000000000000       0x94
 LZMA_ELF00     0x0000000000000000       0x94 tmp/powerpc64-expand.o

LZMA_DEC30      0x0000000000000000       0x28
 LZMA_DEC30     0x0000000000000000       0x28 tmp/powerpc64-expand.o

LZMA_DEC10      0x0000000000000000      0xbb8
 LZMA_DEC10     0x0000000000000000      0xbb8 tmp/powerpc64-expand.o

LZMA_DEC20      0x0000000000000000      0xc74
 LZMA_DEC20     0x0000000000000000      0xc74 tmp/powerpc64-expand.o
